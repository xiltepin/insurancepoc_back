generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id(map: "user_pk") @default(autoincrement())
  name  String
  email String @unique
}

model Compensation {
  compensationid   Int      @id(map: "compensation_pkey") @default(autoincrement())
  vehicleid        Int
  claimdate        DateTime @db.Date
  claimamount      Decimal  @db.Decimal(15, 2)
  compensationtype String?  @db.VarChar(50)
  description      String?
  Vehicle          Vehicle  @relation(fields: [vehicleid], references: [vehicleid], onDelete: Cascade, onUpdate: NoAction, map: "compensation_vehicleid_fkey")
}

model CustomerInfo {
  customerid   Int            @id(map: "customerinfo_pkey") @default(autoincrement())
  firstname    String         @db.VarChar(50)
  lastname     String         @db.VarChar(50)
  dateofbirth  DateTime       @db.Date
  address      String?
  phonenumber  String?        @db.VarChar(15)
  email        String?        @unique(map: "customerinfo_email_key") @db.VarChar(100)
  PolicyHolder PolicyHolder[]
}

model PolicyHolder {
  policyholderid  Int          @id(map: "policyholder_pkey") @default(autoincrement())
  customerid      Int
  policynumber    String       @unique(map: "policyholder_policynumber_key") @db.VarChar(50)
  policystartdate DateTime     @db.Date
  policyenddate   DateTime     @db.Date
  coveragetype    String?      @db.VarChar(50)
  premiumamount   Decimal      @db.Decimal(10, 2)
  CustomerInfo    CustomerInfo @relation(fields: [customerid], references: [customerid], onDelete: Cascade, onUpdate: NoAction, map: "policyholder_customerid_fkey")
  Vehicle         Vehicle[]
}

model Vehicle {
  vehicleid      Int            @id(map: "vehicle_pkey") @default(autoincrement())
  policyholderid Int
  licenseplate   String         @unique(map: "vehicle_licenseplate_key") @db.VarChar(15)
  vin            String         @unique(map: "vehicle_vin_key") @db.VarChar(17)
  make           String?        @db.VarChar(50)
  model          String?        @db.VarChar(50)
  year           Int?
  color          String?        @db.VarChar(30)
  Compensation   Compensation[]
  PolicyHolder   PolicyHolder   @relation(fields: [policyholderid], references: [policyholderid], onDelete: Cascade, onUpdate: NoAction, map: "vehicle_policyholderid_fkey")
}
